<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yue.waimaiserver.mapper.MqMsgLogMapper">
  <resultMap id="BaseResultMap" type="com.yue.waimaiserver.api.entity.MqMsgLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
    <result column="exchange" jdbcType="VARCHAR" property="exchange" />
    <result column="routing_key" jdbcType="VARCHAR" property="routingKey" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="try_count" jdbcType="TINYINT" property="tryCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status, cause, exchange, routing_key, msg, try_count
  </sql>
  <select id="selectByExample" parameterType="com.yue.waimaiserver.api.entity.MqMsgLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mq_msg_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mq_msg_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mq_msg_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yue.waimaiserver.api.entity.MqMsgLogExample">
    delete from mq_msg_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yue.waimaiserver.api.entity.MqMsgLog" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mq_msg_log (status, cause, exchange, 
      routing_key, msg, try_count
      )
    values (#{status,jdbcType=CHAR}, #{cause,jdbcType=VARCHAR}, #{exchange,jdbcType=VARCHAR}, 
      #{routingKey,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{tryCount,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yue.waimaiserver.api.entity.MqMsgLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mq_msg_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        status,
      </if>
      <if test="cause != null">
        cause,
      </if>
      <if test="exchange != null">
        exchange,
      </if>
      <if test="routingKey != null">
        routing_key,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="tryCount != null">
        try_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="exchange != null">
        #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="routingKey != null">
        #{routingKey,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null">
        #{tryCount,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yue.waimaiserver.api.entity.MqMsgLogExample" resultType="java.lang.Long">
    select count(*) from mq_msg_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mq_msg_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.cause != null">
        cause = #{record.cause,jdbcType=VARCHAR},
      </if>
      <if test="record.exchange != null">
        exchange = #{record.exchange,jdbcType=VARCHAR},
      </if>
      <if test="record.routingKey != null">
        routing_key = #{record.routingKey,jdbcType=VARCHAR},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.tryCount != null">
        try_count = #{record.tryCount,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mq_msg_log
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      cause = #{record.cause,jdbcType=VARCHAR},
      exchange = #{record.exchange,jdbcType=VARCHAR},
      routing_key = #{record.routingKey,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      try_count = #{record.tryCount,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yue.waimaiserver.api.entity.MqMsgLog">
    update mq_msg_log
    <set>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="exchange != null">
        exchange = #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="routingKey != null">
        routing_key = #{routingKey,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null">
        try_count = #{tryCount,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yue.waimaiserver.api.entity.MqMsgLog">
    update mq_msg_log
    set status = #{status,jdbcType=CHAR},
      cause = #{cause,jdbcType=VARCHAR},
      exchange = #{exchange,jdbcType=VARCHAR},
      routing_key = #{routingKey,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      try_count = #{tryCount,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateStatusByMsgId">
    update mq_msg_log set status = #{status}
    where id = #{msgId}
  </update>

  <update id="updateTryCount">
    update mq_msg_log set try_count = #{tryCount}
    where id = #{id}
  </update>

  <update id="updateCause">
    update mq_msg_log set cause = #{cause}
    where id = #{id}
  </update>

  <update id="updateCauseAndStatus">
    update mq_msg_log set cause = #{cause},status = #{status}
    where id = #{id}
  </update>
</mapper>